import cv2
import numpy as np
from datetime import datetime

# 定义蓝色在HSV颜色空间中的范围
lower_blue = np.array([110, 50, 50])
upper_blue = np.array([130, 255, 255])

# 初始化摄像头
cap = cv2.VideoCapture(0)

if not cap.isOpened():
    print("Cannot open camera")
    exit()

# 获取摄像头分辨率
frame_width = int(cap.get(3))
frame_height = int(cap.get(4))

# 设置视频尺寸为摄像头分辨率的一半
frame_width_half = frame_width // 2
frame_height_half = frame_height // 2

# 初始化 VideoWriter 对象
out = None
recording = False

print("按 'r' 启动/结束录制. 按 's' 保存当前帧. 按 'q' 退出程序.")

while cap.isOpened():
    ret, frame = cap.read()

    if ret:
        # 转换到HSV颜色空间
        hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

        # 创建掩码以提取蓝色区域
        mask = cv2.inRange(hsv, lower_blue, upper_blue)

        # 将蓝色物体与黑色背景合成
        blue_objects = cv2.bitwise_and(frame, frame, mask=mask)

        # 创建黑色背景
        black_background = np.zeros_like(frame)

        # 将蓝色物体叠加到黑色背景上
        final_frame = cv2.add(black_background, blue_objects)

        # 显示原始大小的帧
        cv2.imshow('Blue Object Detection', final_frame)

        # 检查是否按下'r'键开始/停止录制视频
        if cv2.waitKey(1) & 0xFF == ord('r'):
            if not recording:
                # 获取当前时间戳以创建视频文件名
                timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                video_filename = f'recorded_video_{timestamp}.mp4'
                # 创建 VideoWriter 对象
                fourcc = cv2.VideoWriter_fourcc(*'mp4v')
                out = cv2.VideoWriter(video_filename, fourcc, 20.0, (frame_width_half, frame_height_half))
                recording = True
                print(f"Recording started. Video will be saved as '{video_filename}'.")
            else:
                # 停止录制并释放 VideoWriter
                out.release()
                recording = False
                print(f"Recording stopped. Video saved as '{video_filename}'.")

        # 如果正在录制，则写入视频文件
        if recording:
            smaller_frame = cv2.resize(final_frame, (frame_width_half, frame_height_half), interpolation=cv2.INTER_AREA)
            out.write(smaller_frame)

        # 检查是否按下's'键来保存当前帧
        if cv2.waitKey(1) & 0xFF == ord('s'):
            save_timestamp = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
            save_filename = f'saved_frame_{save_timestamp}.png'
            try:
                cv2.imwrite(save_filename, final_frame)
                print(f"Frame saved as '{save_filename}'")
            except Exception as e:
                print(f"Failed to save frame: {e}")

        # 检查是否按下'q'键退出程序
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

# 如果退出时正在录制，则停止录制并释放 VideoWriter
if recording:
    out.release()
    print(f"录制结束，视频保存为: '{video_filename}'.")

# 释放摄像头
cap.release()

# 关闭所有 OpenCV 窗口
cv2.destroyAllWindows()
